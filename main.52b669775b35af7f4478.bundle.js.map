{"version":3,"file":"main.52b669775b35af7f4478.bundle.js","sources":["webpack:///./src/stories/common/themeComponent.jsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { action } from '@storybook/addon-actions';\n\nexport const PageTitle = memo(\n  ({\n    title = 'React In Viewport',\n    description = 'Wrapper component to detect if the component is in viewport using Intersection Observer API'\n  }) => (\n    <div className=\"page__title\">\n      <h1 className=\"page__title-main\">\n        {title}\n        <a\n          className=\"github mui-icon\"\n          href=\"https://github.com/roderickhsiao/react-in-viewport\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span style={{ visibility: 'hidden' }}>Github</span>\n        </a>\n      </h1>\n      <p className=\"page__title-desc\">{description}</p>\n    </div>\n  )\n);\nPageTitle.displayName = 'PageTitle';\n\nexport const Card = memo(({ titleText, contentNode, innerRef }) => (\n  <div className=\"card\" ref={innerRef}>\n    <div className=\"card__head\">\n      <h3 className=\"card__title\">{titleText}</h3>\n    </div>\n    <div className=\"card__conent\">{contentNode}</div>\n  </div>\n));\n\nCard.displayName = 'Card';\n\nexport const Block = props => {\n  const { inViewport, innerRef, enterCount, leaveCount } = props;\n  const color = inViewport ? '#217ac0' : '#ff9800';\n  const text = inViewport ? 'In viewport' : 'Not in viewport';\n  action('Is in viewport')(inViewport);\n\n  return (\n    <Card\n      className=\"viewport-block\"\n      titleText={text}\n      innerRef={innerRef}\n      contentNode={\n        <div\n          title={`Enter viewport ${enterCount} times, leave viewport ${leaveCount} times`}\n          style={{\n            width: '400px',\n            height: '300px',\n            background: color,\n            transitionDuration: '1s'\n          }}\n        />\n      }\n    />\n  );\n};\n\nBlock.displayName = 'Block';\n\nexport const Spacer = () => (\n  <div style={{ height: '100vh', padding: '20px' }}>\n    <p>\n      Scroll down to make component in viewport{' '}\n      <span role=\"img\" aria-label=\"down\">\n        ðŸ‘‡\n      </span>{' '}\n    </p>\n  </div>\n);\nSpacer.displayName = Spacer;\n"],"mappings":"AAAA","sourceRoot":""}